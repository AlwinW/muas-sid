function resampled_data = resample_log_data(log_data, resample_freq)

% first define the time domain
% use the max start time and min end time to avoid extrapolation off the
% end of any set of data
t0 = max([log_data.imu.time(1), log_data.ctun.time(1), ...
          log_data.nkf1.time(1), log_data.nkf2.time(1), ...
          log_data.aoa.time(1), log_data.rcou.time(1), ...
          log_data.bat.time(1)]);
t1 = min([log_data.imu.time(end), log_data.ctun.time(end), ...
          log_data.nkf1.time(end), log_data.nkf2.time(end), ...
          log_data.aoa.time(end), log_data.rcou.time(end), ...
          log_data.bat.time(end)]);
resampled_data.time = (t0 : (1/resample_freq) : t1)';
% then resample all the other data (except for biases) using linear
% interpolation
%%% IMU
resampled_data.angular_velocity_x = interp1(log_data.imu.time, log_data.imu.gyro_x, ...
    resampled_data.time);
resampled_data.angular_velocity_y = interp1(log_data.imu.time, log_data.imu.gyro_y, ...
    resampled_data.time);
resampled_data.angular_velocity_z = interp1(log_data.imu.time, log_data.imu.gyro_z, ...
    resampled_data.time);
resampled_data.body_acceleration_x = interp1(log_data.imu.time, log_data.imu.acc_x, ...
    resampled_data.time);
resampled_data.body_acceleration_y = interp1(log_data.imu.time, log_data.imu.acc_y, ...
    resampled_data.time);
resampled_data.body_acceleration_z = interp1(log_data.imu.time, log_data.imu.acc_z, ...
    resampled_data.time);
%%% CTUN
resampled_data.airspeed = interp1(log_data.ctun.time, log_data.ctun.airspeed, ...
    resampled_data.time);
%%% NKF1
resampled_data.roll = interp1(log_data.nkf1.time, log_data.nkf1.roll, ...
    resampled_data.time);
resampled_data.pitch = interp1(log_data.nkf1.time, log_data.nkf1.pitch, ...
    resampled_data.time);
resampled_data.yaw = interp1(log_data.nkf1.time, log_data.nkf1.yaw, ...
    resampled_data.time);
resampled_data.velocity_north = interp1(log_data.nkf1.time, log_data.nkf1.velocity_north, ...
    resampled_data.time);
resampled_data.velocity_east = interp1(log_data.nkf1.time, log_data.nkf1.velocity_east, ...
    resampled_data.time);
resampled_data.velocity_down = interp1(log_data.nkf1.time, log_data.nkf1.velocity_down, ...
    resampled_data.time);
resampled_data.position_north = interp1(log_data.nkf1.time, log_data.nkf1.position_north, ...
    resampled_data.time);
resampled_data.position_east = interp1(log_data.nkf1.time, log_data.nkf1.position_east, ...
    resampled_data.time);
resampled_data.position_down = interp1(log_data.nkf1.time, log_data.nkf1.position_down, ...
    resampled_data.time);
resampled_data.gyro_bias_x = interp1(log_data.nkf1.time, log_data.nkf1.gyro_bias_x, ...
    resampled_data.time);
resampled_data.gyro_bias_y = interp1(log_data.nkf1.time, log_data.nkf1.gyro_bias_y, ...
    resampled_data.time);
resampled_data.gyro_bias_z = interp1(log_data.nkf1.time, log_data.nkf1.gyro_bias_z, ...
    resampled_data.time);
%%% NKF2
resampled_data.wind_velocity_north = interp1(log_data.nkf2.time, log_data.nkf2.wind_velocity_north, ...
    resampled_data.time);
resampled_data.wind_velocity_east = interp1(log_data.nkf2.time, log_data.nkf2.wind_velocity_east, ...
    resampled_data.time);
resampled_data.angle_of_attack = interp1(log_data.aoa.time, log_data.aoa.angle_of_attack, ...
    resampled_data.time);
resampled_data.acc_bias_z = interp1(log_data.nkf2.time, log_data.nkf2.acc_bias_z, ...
    resampled_data.time);
%%% AOA
resampled_data.sideslip = interp1(log_data.aoa.time, log_data.aoa.sideslip, ...
    resampled_data.time);
%%% RCOU
resampled_data.aileron = interp1(log_data.rcou.time, log_data.rcou.aileron, ...
    resampled_data.time);
resampled_data.throttle = interp1(log_data.rcou.time, log_data.rcou.throttle, ...
    resampled_data.time);
resampled_data.elevator = interp1(log_data.rcou.time, log_data.rcou.elevator, ...
    resampled_data.time);
resampled_data.rudder = interp1(log_data.rcou.time, log_data.rcou.rudder, ...
    resampled_data.time);
%%% BAT
resampled_data.battery_power = interp1(log_data.bat.time, log_data.bat.power, ...
    resampled_data.time);

% shift the timestamps to start at 0
resampled_data.time = resampled_data.time - resampled_data.time(1);

end